// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	tukui "github.com/unly/go-tukui"
)

// MockTukUIAPI is an autogenerated mock type for the tukuiAPI type
type MockTukUIAPI struct {
	mock.Mock
}

// GetClassicAddon provides a mock function with given fields: id
func (_m *MockTukUIAPI) GetClassicAddon(id int) (tukui.Addon, *http.Response, error) {
	ret := _m.Called(id)

	var r0 tukui.Addon
	if rf, ok := ret.Get(0).(func(int) tukui.Addon); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(tukui.Addon)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(int) *http.Response); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(int) error); ok {
		r2 = rf(id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetElvUI provides a mock function with given fields:
func (_m *MockTukUIAPI) GetElvUI() (tukui.Addon, *http.Response, error) {
	ret := _m.Called()

	var r0 tukui.Addon
	if rf, ok := ret.Get(0).(func() tukui.Addon); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(tukui.Addon)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func() *http.Response); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetRetailAddon provides a mock function with given fields: id
func (_m *MockTukUIAPI) GetRetailAddon(id int) (tukui.Addon, *http.Response, error) {
	ret := _m.Called(id)

	var r0 tukui.Addon
	if rf, ok := ret.Get(0).(func(int) tukui.Addon); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(tukui.Addon)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(int) *http.Response); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(int) error); ok {
		r2 = rf(id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetTukUI provides a mock function with given fields:
func (_m *MockTukUIAPI) GetTukUI() (tukui.Addon, *http.Response, error) {
	ret := _m.Called()

	var r0 tukui.Addon
	if rf, ok := ret.Get(0).(func() tukui.Addon); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(tukui.Addon)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func() *http.Response); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

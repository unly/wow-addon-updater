// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	github "github.com/google/go-github/v32/github"

	mock "github.com/stretchr/testify/mock"
)

// MockLatestReleaser is an autogenerated mock type for the latestReleaser type
type MockLatestReleaser struct {
	mock.Mock
}

// LatestRelease provides a mock function with given fields: owner, repo
func (_m *MockLatestReleaser) LatestRelease(owner string, repo string) (*github.RepositoryRelease, *http.Response, error) {
	ret := _m.Called(owner, repo)

	var r0 *github.RepositoryRelease
	if rf, ok := ret.Get(0).(func(string, string) *github.RepositoryRelease); ok {
		r0 = rf(owner, repo)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*github.RepositoryRelease)
		}
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(string, string) *http.Response); ok {
		r1 = rf(owner, repo)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string) error); ok {
		r2 = rf(owner, repo)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
